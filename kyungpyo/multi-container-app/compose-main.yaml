# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as two services called "todo-app" and “todo-database”
# The service “todo-app” is built from the Dockerfile in the /app directory,
# and the service “todo-database” uses the official MongoDB image 
# from Docker Hub - https://hub.docker.com/_/mongo. 
# You can add other services your application may depend on here.
# 기본적으로 Docker Compose는 호스트 머신에서 디렉토리를 컨테이너에 바인드 마운트할 수 있음
# 이를 통해 호스트 머신에서 파일 수정 시 변경 사항이 컨테이너에 즉시 반영
# Dockerfile의 nodemon이 이러한 변경 사항을 감지하고 Node.js 애플리케이션을 자동으로 재시작
# Docker Compose : 파일 동기화 처리
# Nodemon : 애플리케이션이 변경 사항에 반응하도록 하는 도구

# develop:
#   watch:
#   특정 경로를 감시하도록 지정
#   ./app/package.json에 변경사항 감지 시 서비스 (rebuild)
#   ./app 하위의 다른 파일들 변경 사항 감지 시 변경 사항이 컨테이너의 /usr/src/app 경로로 동기화(sync)

services:
  todo-app:
    build:
      context: ./app
      dockerfile: Dockerfile-main
    depends_on:
      - todo-database
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
      - 35729:35729
    develop:
      watch:
        - path: ./app/package.json
          action: rebuild
        - path: ./app
          target: /usr/src/app
          action: sync

  todo-database:
    image: mongo:6
    #volumes: 
    #  - database:/data/db
    ports:
      - 27017:27017

#volumes:
  #database:
